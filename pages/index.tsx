import type { NextPageContext } from 'next'
import Head from 'next/head'
import Link from 'next/link'
import { InstagramEmbed } from 'react-social-media-embed'
import { trpc } from '../utils/trpc'
import { useForm } from 'react-hook-form'
import { articleCollection, db, Article } from 'models/client'
import { aql } from 'arangojs'
import debug from 'debug'

const log = debug('pages/index')

const IGEmbed = () => {
  return (
    <div className='grayscale'>
      <InstagramEmbed url='https://www.instagram.com/p/CA8DBgHAtSp/' width={328} />
    </div>
  )
}

function Heading() {
  return (
    <div className='border-2 border-x-0 border-black py-1'>
      <div className='border border-x-0 border-black py-2'>Tuesday, June 12, 2020 / Clear 19</div>
    </div>
  )
}

const SaveArticleInput = () => {
  const mutation = trpc.useMutation(['article.parse'])
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm()

  const onSubmit = (data: any) => mutation.mutate({ url: data.url })

  return (
    <form onSubmit={handleSubmit(onSubmit)}>
      <input
        type='text'
        placeholder='https://'
        className='input input-ghost w-full max-w-xs'
        {...register('url', { required: true, maxLength: 80 })}
      />

      <button type='submit' className='btn btn-ghost'>
        submit
      </button>
    </form>
  )
}

export default function Home({ articles }: { articles: Article[] }) {
  return (
    <>
      <Head>
        <title>Keith Yao</title>
        <meta
          name='description'
          content='Generated by create next app and using NextUI as a react UI library'
        />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <div className='container mx-auto p-4 py-12'>
        <h1 className='text-center font-serif font-light tracking-widest text-6xl uppercase mb-4'>
          Keith Yao
        </h1>

        <Heading />

        <SaveArticleInput />

        <div className='pt-4 font-serif'>
          {articles &&
            articles.map((doc) => {
              return (
                <div key={doc._key} className='mb-4'>
                  <h2 className='card-title font-serif'>{doc.title}</h2>
                  <p>
                    {doc.description}
                    <Link href={`/article/${doc._key}`}>
                      <a className="link ml-2">Read more...</a>
                    </Link>
                  </p>

                </div>
              )
            })}
        </div>

        <div className='columns-2 p-2 font-serif text-justify'></div>
      </div>
    </>
  )
}

export async function getServerSideProps(ctx: NextPageContext) {
  try {
    const r = await db.query(aql`
      for doc in ${articleCollection}
        LIMIT 10
        return doc
    `)

    const articles = await r.all()

    return {
      props: {
        articles,
      },
    }
  } catch (e) {
    console.error(e)
    return { props: { id: ctx.query.id as string, doc: null } }
  }
}
